
# 문제 14500번 테트로미노
# Bruteforcing(브루투포스)

import sys
r = sys.stdin.readline

tetromino = [
  [(0,0), (0,1), (1,0), (1,1)], # ㅁ

  [(0,0), (0,1), (0,2), (0,3)], # ㅡ
  [(0,0), (1,0), (2,0), (3,0)],

  [(0,0), (1,0), (1,1), (1,2)], # ㄴ
  [(0,0), (0,1), (0,2), (1,0)],
  [(1,0), (1,1), (1,2), (0,2)],
  [(0,0), (0,1), (0,2), (1,2)],
  [(0,0), (1,0), (2,0), (2,1)],
  [(2,0), (2,1), (1,1), (0,1)],
  [(0,0), (0,1), (1,0), (2,0)],
  [(0,0), (0,1), (1,1), (2,1)],

  [(0,0), (0,1), (0,2), (1,1)], # ㅜ
  [(1,0), (1,1), (1,2), (0,1)],
  [(0,0), (1,0), (2,0), (1,1)],
  [(1,0), (0,1), (1,1), (2,1)],

  [(1,0), (2,0), (0,1), (1,1)], # 계단
  [(0,0), (1,0), (1,1), (2,1)],
  [(1,0), (0,1), (1,1), (0,2)],
  [(0,0), (0,1), (1,1), (1,2)]
]

dp = 0
def find(x, y):
  global dp

  for i in range(19):
    result = 0
    for j in range(4):
      try:
        nx = x + tetromino[i][j][0]
        ny = y + tetromino[i][j][1]
        result += arr[nx][ny]
      except:
        continue
    
    dp = max(dp, result)


n, m = map(int, r().split())
arr = [list(map(int, r().split())) for _ in range(n)]

for i in range(n):
  for j in range(m):
    find(i, j)

print(dp)






# 입력 예시
# 5 5
# 1 2 3 4 5
# 5 4 3 2 1
# 2 3 4 5 6
# 6 5 4 3 2
# 1 2 1 2 1

# 4 5
# 1 2 3 4 5
# 1 2 3 4 5
# 1 2 3 4 5
# 1 2 3 4 5

# 4 10
# 1 2 1 2 1 2 1 2 1 2
# 2 1 2 1 2 1 2 1 2 1
# 1 2 1 2 1 2 1 2 1 2
# 2 1 2 1 2 1 2 1 2 1

# 출력 예시
# 19

# 20

# 7








# 행렬 전치 방법
# https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=cjh226&logNo=221328286730